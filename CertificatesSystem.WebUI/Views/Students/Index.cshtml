@model StudentsListViewModel
@{
    ViewData["ActivePage"] = ManageNavPages.StudentsList;
}

<!-- Modal -->
<partial name="_StudentsListModal" model="Model.StudentForm" />

<!-- Modal -->
<partial name="_WebcamModal" />

<h3 class="fw-bold display-6 mb-4 border-bottom border-3 border-dark text-center">Listado de estudiantes</h3>

<!-- Status message alert -->
<partial name="_StatusMessage" />

<button type="button" id="button-create" class="btn btn-success mb-4" data-bs-toggle="modal" data-bs-target="#form-modal">
    <i class="las la-plus fs-4"></i> Agregar estudiante
</button>

<div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead>
        <tr class="table-primary">
            <th scope="col">NIE</th>
            <th scope="col">Nombres</th>
            <th scope="col">Apellidos</th>
            <th scope="col">¿Tiene foto?</th>
            <th scope="col">Acciones</th>
        </tr>
        </thead>
        <tbody>

        @if (Model.StudentsList.Count == 0)
        {
            <tr>
                <td class="text-center" colspan="5">Actualmente no existen estudiantes agregados.</td>
            </tr>
        }

        @foreach (var student in Model.StudentsList)
        {
            <tr>
                <th scope="row">@student.Nie</th>
                <td>@student.Name</td>
                <td>@student.Surname</td>
                <td class="fw-bold">
                    @if (string.IsNullOrEmpty(student.PhotoId))
                    {
                        <span class='text-danger'>No</span>
                    }
                    else
                    {
                        <span class='text-success'>Si</span>
                    }
                </td>
                <td>
                    <div class="d-flex">
                        <button class="button-edit bg-transparent border-0 p-0" data-bs-toggle="modal" data-bs-target="#form-modal">
                            <i class="las la-pen text-primary fs-3 px-1"></i>
                        </button>
                        <form asp-controller="Students" asp-action="Delete" method="post" class="delete-element-form">
                            <input type="hidden" value="@student.Nie" name="nie" />
                            <button class="bg-transparent border-0 p-0"><i class="las la-trash text-danger fs-3 px-1"></i></button>
                        </form>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

@section Scripts {
    <script type="text/javascript" src="~/lib/webcam-easy/webcam-easy.min.js"></script>
    <script>    
        const btnCreate = document.getElementById('button-create');
        const btnEdit = document.querySelectorAll('.button-edit');
        const formCreate = document.getElementById('form-create');
        const modalLabel = document.getElementById('form-modal-label');
        
        const webcamElement = document.getElementById('webcam');
        const canvasElement = document.getElementById('canvas');
        const btnTakeSnapshot = document.getElementById('take-snapshot');
        const btnChangeWebcamStatus = document.getElementById('change-webcam-status');
        const textWebcamStatus = document.querySelector("#change-webcam-status span");
        const photoPreview = document.getElementById('photo-preview');
        const studentPhoto = document.getElementById('student-photo');
        const btnSavePhoto = document.getElementById('save-photo');
        const inputPhotoFile = formCreate.elements['PhotoFile'];
        
        let webcamStatus = false;
        const webcam = new Webcam(webcamElement, 'user', canvasElement);
        
        const getBase64Photo = (nie) => {
            const baseUrl = window.location.origin;
            const url = `${baseUrl}/Students/GetPhotoByNie?nie=${nie}`;
            
            fetch(url)
                .then(data => data.text())
                .then(res => photoPreview.src = res);
        }
        
        const getInfo = (e) => {
            const info = e.currentTarget.closest('tr').children;

            formCreate.action = "/Students/Update";
            formCreate.elements['LastNie'].value = info[0].outerText;
            formCreate.elements['Nie'].value = info[0].outerText;
            formCreate.elements['Name'].value = info[1].outerText;
            formCreate.elements['Surname'].value = info[2].outerText;
            getBase64Photo(info[0].outerText);
            
            modalLabel.innerHTML = `<i class="las la-pen fs-4"></i> Editar estudiante`;
        };
        
        const convertToBase64 = (file) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            
            reader.onload = function () {
                formCreate.elements['Photo'].value = reader.result;
            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
            };
        }
                
        btnChangeWebcamStatus.addEventListener('click', () => {
            if (webcamStatus) {
                webcam.stop();
                webcamStatus = false;
                textWebcamStatus.textContent = "Encender";
                btnChangeWebcamStatus.classList.remove("btn-danger");
                btnChangeWebcamStatus.classList.add("btn-success");
                return;
            }
            
            webcam.start()
                .then(result => {
                    webcamStatus = true;
                    textWebcamStatus.textContent = "Apagar";
                    btnChangeWebcamStatus.classList.add("btn-danger");
                    btnChangeWebcamStatus.classList.remove("btn-success");
                });
        });

        btnTakeSnapshot.addEventListener('click', () => {
            studentPhoto.src = webcam.snap();
        });
        
        btnSavePhoto.addEventListener('click', () => {
            photoPreview.src = studentPhoto.src;
            formCreate.elements['Photo'].value = studentPhoto.src;
            formCreate.elements['PhotoFile'].value = "";
            btnChangeWebcamStatus.click();
        });
        
        inputPhotoFile.addEventListener('change', () => {
            const [file] = inputPhotoFile.files
            if (file) {
                photoPreview.src = URL.createObjectURL(file);
                convertToBase64(file);
            }
        });

        btnCreate.addEventListener('click', () => {
            clearInputs();
            
            photoPreview.src = '/img/unknown.png';
            formCreate.action = '/Students/Create';
            modalLabel.innerHTML = `<i class="las la-plus-circle fs-4"></i> Crear estudiante`;
        });

        btnEdit.forEach((btn) => {
            btn.addEventListener('click', (e) => getInfo(e));
        });
        
        formCreate.addEventListener('submit', (e) => {
            e.preventDefault();
    
            // if (validateForm()) {
                formCreate.submit();
            // }
        });
        
    </script>
}